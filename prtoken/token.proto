// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

edition = "2023";

package prtoken.proto;

import "private_join_and_compute/crypto/elgamal.proto";


option java_multiple_files = true;

// Plaintext contents of a Probabilistic Reveal Token.
message PlaintextToken {
  int32 version = 1;
  int32 ordinal = 2;

  // Note: The signal may contain an IP address, so we annotate it as such.
  bytes signal = 3;

  bool hmac_valid = 4;
}

enum VerificationErrorType {
  VERIFICATION_ERROR_UNKNOWN = 0;
  VERIFICATION_ERROR_DECRYPT_FAILED = 1;
  VERIFICATION_ERROR_PARSE_FAILED = 2;
  VERIFICATION_ERROR_INVALID_HMAC = 3;
}

message VerificationErrorReport {
  int32 index = 1;
  VerificationErrorType error = 2;
  string error_message = 3;
}

message ValidationToken {
  string filename = 1;
  private_join_and_compute.ElGamalCiphertext eg_ciphertext = 2;
  private_join_and_compute.ElGamalPublicKey public_key = 3;
  float p_reveal = 4;
  uint64 epoch_id = 5;
  PlaintextToken contents = 6;
}

message ElGamalKeyMaterial {
  private_join_and_compute.ElGamalPublicKey public_key = 1;
  private_join_and_compute.ElGamalSecretKey secret_key = 2;
}

message EpochKeyMaterials {
  uint64 epoch_id = 1;
  string epoch_start_time = 2;
  string epoch_end_time = 3;
  string invalidated_at = 4;
  ElGamalKeyMaterial eg = 5;
  bytes hmac_key = 6;
}
